@model IEnumerable<StoreFront.DATA.EF.Models.Product>

@{
    ViewData["Title"] = "Products";
}

<section class="product_section layout_padding gray-section py-4">
    <div class="heading_container heading_center">
        <h2>Our <span>Products</span></h2>
        <div class="d-flex justify-content-between">
            @if (User.IsInRole("Admin"))
            {
                <span>
                    <a asp-action="Create" class="btn btn-primary">Add New Product</a>
                    &nbsp;
                </span>
            }
            &nbsp;
            <a asp-action="TiledIndex" class="btn btn-secondary">Tile View</a>

        </div>
    </div>
</section>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ProductName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductDescription)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UnitsInStock)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Season)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ImageName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Category)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Supplier)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    <a asp-action="Details" asp-route-id="@item.ProductId">
                        @Html.DisplayFor(modelItem => item.ProductName)
                    </a>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductDescription)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UnitsInStock)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Season)
                </td>
                <td>
                    <img src="~/images/t_@item.ImageName" class="img-fluid" alt="@item.ProductName">
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Category.CategoryName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Supplier.SupplierName)
                </td>
                    @if (User.IsInRole("Admin"))
                    {
                        <td>
                            <a asp-action="Edit" asp-route-id="@item.ProductId">Edit</a> |
                            @* <a asp-action="Details" asp-route-id="@item.ProductId">Details</a> | *@

                            @if (item.OrderDetails.Any())//.Count > 0
                            {
                                <a disabled class="text-danger" style="text-decoration: line-through;">Delete</a>
                            }
                            else
                            {
                                <a asp-action="Delete" asp-route-id="@item.ProductId">Delete</a>
                            }
                        </td>
                    }
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    <script>
        $(document).ready(function () {
            $('.table').DataTable({
                dom: 'Blfrtip', // B - buttons, l - how many per page, f - filtering, r - processing display, t- table, i - info, p- pagination
                'columnDefs': [{
                    "targets": [5, 2],
                    "orderable": false
                }],
                responsive: true,
                buttons: ['copy', 'excel', 'pdf']
            });
        });
    </script>
}